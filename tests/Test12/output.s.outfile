.text
.global main
main:
  ## prologue
  pushq %rbp # save %rbp on the stack
  movq %rsp, %rbp # define %rbp for the current function
  subq $32, %rsp
  ## contenu
main_body:
  movl  $2, -8(%rbp)
  movl  $3, -12(%rbp)
  movl  -8(%rbp), %eax
  cmpl  -12(%rbp), %eax
  setle   %al
  movzbl  %al, %eax
  movl  %eax, -16(%rbp)
  movl  -16(%rbp), %eax
  movl  %eax, -4(%rbp)
  movl  -8(%rbp), %eax
  cmpl  -12(%rbp), %eax
  setge   %al
  movzbl  %al, %eax
  movl  %eax, -16(%rbp)
  movl  -16(%rbp), %eax
  movl  %eax, -4(%rbp)
  movl  -8(%rbp), %eax
  cmpl  -12(%rbp), %eax
  setl    %al
  movzbl  %al, %eax
  movl  %eax, -16(%rbp)
  movl  -16(%rbp), %eax
  movl  %eax, -4(%rbp)
  movl  -8(%rbp), %eax
  cmpl  -12(%rbp), %eax
  setg    %al
  movzbl  %al, %eax
  movl  %eax, -16(%rbp)
  movl  -16(%rbp), %eax
  movl  %eax, -4(%rbp)
  movl  -8(%rbp), %eax
  cmpl  -12(%rbp), %eax
  sete    %al
  movzbl  %al, %eax
  movl  %eax, -16(%rbp)
  movl  -16(%rbp), %eax
  movl  %eax, -4(%rbp)
  movl  -8(%rbp), %eax
  cmpl  -12(%rbp), %eax
  setne   %al
  movzbl  %al, %eax
  movl  %eax, -16(%rbp)
  movl  -16(%rbp), %eax
  movl  %eax, -4(%rbp)
main_end:
  ## epilogue
  leave
  ret

