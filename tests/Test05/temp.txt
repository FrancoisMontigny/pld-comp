.text
.global main
main:
  ## prologue
  pushq %rbp # save %rbp on the stack
  movq %rsp, %rbp # define %rbp for the current function
  ## contenu
  movl $36, -16(%rbp)
  movl  -16(%rbp), %eax
  movl  %eax, -4(%rbp)
  movl $12, -20(%rbp)
  movl  -20(%rbp), %eax
  movl  %eax, -8(%rbp)
  movl $1, -24(%rbp)
  movl $2, -28(%rbp)
  movl $2, -32(%rbp)
  movl  -28(%rbp), %eax
  imull -32(%rbp), %eax
  movl %eax, -36(%rbp)
  movl  -24(%rbp), %eax
  addl -36(%rbp), %eax 
  movl %eax, -40(%rbp)
  movl  -40(%rbp), %eax
  movl  %eax, -12(%rbp)
  movl $4, -44(%rbp)
  movl  -44(%rbp), %eax
  imull -4(%rbp), %eax
  movl %eax, -48(%rbp)
  movl  -48(%rbp), %eax
  subl  -12(%rbp), %eax
  movl %eax, -52(%rbp)
  movl $6, -56(%rbp)
  movl  -8(%rbp), %eax
  cltd
  idivl -56(%rbp)
  movl %eax, -60(%rbp)
  movl  -52(%rbp), %eax
  addl -60(%rbp), %eax 
  movl %eax, -64(%rbp)
  movl -64(%rbp), %eax
  popq %rbp
  ret
  ## epilogue
  popq %rbp # restore %rbp from the stack
  ret

